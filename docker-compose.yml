version: '3.8'

services:

# mysql database, not much extra setup needed.
  mysqldb:
    image: mysql:latest
    platform: linux/x86_64
    container_name: mysql
    restart: always
    environment:
      MYSQL_DATABASE: 'db'
      # user root 
      MYSQL_USER: 'user'
      # You can use whatever password you like
      MYSQL_PASSWORD: 'password'
      # Password for root access
      MYSQL_ROOT_PASSWORD: 'localpass'
    ports:
      - '3306:3306'
    expose:
      # Opens port 3306 on the container
      - '3306'
      # Where our data will be persisted
    networks:
      - local-dev-network
    volumes:
      - local-db:/var/lib/mysql

  # mongo db container. nothing special here really
  mongodb:
    image: mongo:latest
    platform: linux/x86_64
    container_name: mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpassword
    ports:
      - 27017:27017
    volumes:
      - mongodb-data-container:/data/db
  
  # nginx for our server. add as many conf files you need for your projects.
  nginx:
    image: nginx:latest
    build: ./nginx/
    container_name: nginx
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./code:/code
    ports:
      - "80:80"
    networks:
      - local-dev-network
  
  # php fpm container for our interpreter
  phpfpm:
    image: php:8-fpm
    platform: linux/x86_64
    build: ./php-fpm/
    container_name: php8
    environment:
      - SSH_AUTH_SOCK=/ssh-agent
    networks:
      - local-dev-network
    volumes:
      - ./code:/code
      - ${SSH_AUTH_SOCK}:/ssh-agent

# adding a network to keep everything encapsulated
networks: 
  local-dev-network:
    driver: bridge

# Names our volume for mysql db
volumes:
  local-db:
  mongodb-data-container:
